# 模式匹配和导引表达式
有些情况下，我们想根据传入的参数来改变混合的默认呈现

    第一个混合定义并未被匹配，因为它只接受dark做为首参
    第二个混合定义被成功匹配，因为它只接受light
    第三个混合定义被成功匹配，因为它接受任意值

.mixin (dark, @color) {
  color: darken(@color, 10%);
}
.mixin (light, @color) {
  color: lighten(@color, 10%);
}
.mixin (@_, @color) {
  display: block;
}

@switch: light;

.class {
  .mixin(@switch, #888);
}

//如果定义的变量没有对应上就赢@_来表示
//output
.class {
  color: #a2a2a2;
  display: block;
}


我们也可以匹配多个参数：
.mixin (@a) {
  color: @a;
}
.mixin (@a, @b) {
  font: @a / @b;
}
#header {
    .mixin(#ccc);
}
#footer {
    .mixin(12px, 33px);
}

//output
#header {
  color: #cccccc;
}
#footer {
  font: 12px / 33px;
}


引导

当我们想根据表达式进行匹配，而非根据值和参数匹配时，导引就显得非常有用。
.mixin (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixin (@a) {
  color: @a;
}

.class1 { .mixin(#ddd) }
.class2 { .mixin(#555) }

//output
.class1 {
  background-color: black;
  color: #dddddd;
}
.class2 {
  background-color: white;
  color: #555555;
}


导引中可用的全部比较运算有： > >= = =< <。此外，关键字true只表示布尔真值，下面两个混合是相同的：
.truth (@a) when (@a) { ... }
.truth (@a) when (@a = true) { ... }



导引序列使用逗号‘,’—分割，当且仅当所有条件都符合时，才会被视为匹配成功。

.mixin (@a) when (@a > 10), (@a < -10) { ... }

导引可以无参数，也可以对参数进行比较运算：

@media: mobile;

.mixin (@a) when (@media = mobile) { ... }
.mixin (@a) when (@media = desktop) { ... }

.max (@a, @b) when (@a > @b) { width: @a }
.max (@a, @b) when (@a < @b) { width: @b }

最后，如果想基于值的类型进行匹配，我们就可以使用is*函式：

.mixin (@a, @b: 0) when (isnumber(@b)) { ... }
.mixin (@a, @b: black) when (iscolor(@b)) { ... }


下面就是常见的检测函式：

    iscolor
    isnumber
    isstring
    iskeyword
    isurl

如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：

    ispixel
    ispercentage
    isem

最后再补充一点，在导引序列中可以使用and关键字实现与条件：

.mixin (@a) when (isnumber(@a)) and (@a > 0) { ... }

使用not关键字实现或条件

.mixin (@b) when not (@b > 0) { ... }
